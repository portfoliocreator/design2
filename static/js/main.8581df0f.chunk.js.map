{"version":3,"sources":["logo.svg","portfolio/landing.jsx","portfolio/about.jsx","portfolio/cards/paper.jsx","portfolio/education.jsx","portfolio/cards/flat.jsx","portfolio/work.jsx","portfolio/cards/expand.jsx","portfolio/volunteer.jsx","portfolio/cards/mini/award.jsx","portfolio/cards/mini/language.jsx","portfolio/cards/mini/publication.jsx","portfolio/cards/mini/skills.jsx","portfolio/cards/dialogPublication.jsx","portfolio/cards/dialogAward.jsx","portfolio/extra.jsx","portfolio/contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","props","name","label","img","className","src","onClick","initScroll","About","about","summary","PaperCard","company","position","children","grade","startDate","endDate","degree","Paper","Education","education","map","educationPlace","institution","area","gpa","startdate","enddate","qualification","details","FlatCard","website","href","target","Work","work","workPlace","ExpansionCard","organisation","handlePanelChange","expanded","id","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","Volunteer","state","bind","panel","this","setState","volunteer","volunteerPlace","index","React","Component","MiniCard","title","items","handleDialogOpen","Card","CardContent","component","variant","style","textTransform","item","Chip","language","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","open","handleDialogClose","date","publisher","Dialog","TransitionComponent","fullWidth","maxWidth","keepMounted","onClose","aria-labelledby","aria-describedby","padding","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","awarder","overflowWrap","Extra","awards","publications","languages","skills","openPublishDialog","openAwardDialog","userAwards","userPublication","userLanguages","userSkills","text","type","chip","releaseDate","AwardDisp","PublicDisp","SkillDisp","console","log","length","Contact","email","phone","location","addressline1","addressline2","city","country","pincode","App","profile","appData","class","user","imgUrl","scroll","scrollTo","window","innerHeight","top","number","Boolean","hostname","match","fetch","then","r","json","data","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8581df0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Landing = (props) => {\n  const {\n    name, label, img\n  } = props;\n  return (\n    <div className=\"portfolioPage1\">\n      <div className=\"portfolioPage1Details\">\n        <img className=\"portfolioUserImage\" src={img} />\n        <div className=\"portfolioUserDetails\">\n          <span className=\"portfolioUserName\">{name}</span>\n          {' '}\n          <span className=\"portfolioUserLabel\">\n            |\n            {' '}\n            {label}\n          </span>\n          <div className=\"miniLine\" />\n        </div>\n      </div>\n      <div className=\"portfolioPage1SocialHolder\">\n        <div className=\"portfolioBtn\" onClick={props.initScroll}>Learn More</div>\n      </div>\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst About = (props) => {\n  const about = props.summary.summary;\n  // console.log(\"about props below\")\n  // console.log(props.summary.summary);\n  return (\n    <div className=\"portfolioPage aboutPage\">\n      <div className=\"portfolioPageSplit rightAbout\">\n        <div className=\"portfolioUserSummary\">\n          <div className=\"miniLine\" />\n          {about}\n          <div className=\"miniLine\" />\n        </div>\n      </div>\n      <div className=\"portfolioPageSplit leftAbout\">About me</div>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  about: PropTypes.string.isRequired,\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\n\nconst PaperCard = (props) => {\n  const {\n    company, position, children, grade, startDate, endDate, degree\n  } = props;\n  return (\n    <Paper className=\"portfolioCard portfolioWorkCard\">\n      <div className=\"portfolioCardTitle\">\n        <span className=\"portfolioCardTitleMain\">{company}</span>\n        {' '}\n        <span className=\"portfolioCardTitleSub\">\n          |\n          {' '}\n          {position}\n        </span>\n        <div className=\"portfolioFlatSubTitle\">\n          {degree}\n        </div>\n      </div>\n      <div className=\"miniLine miniCardLine\" />\n      <div className=\"portfolioCardContent\">\n        {children}\n      </div>\n      <div className=\"miniLine miniCardLine\" />\n      <div className=\"portfolioCardWebsite\">\n        <span>Grade |</span>\n        {' '}\n        {grade}\n      </div>\n      <div className=\"portfolioCardDateContainer\">\n        {startDate}\n        {' '}\n        -\n        {' '}\n        {endDate}\n      </div>\n    </Paper>\n  );\n};\n\nPaperCard.propTypes = {\n  company: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n  degree: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n};\n\nexport default PaperCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PaperCard from './cards/paper';\n\nconst Education = (props) => {\n  const { education } = props;\n\n  return (\n    <div className=\"portfolioPage portfolioEducationPage\">\n      <div className=\"portfolioPageTitle\">\n        Education\n      </div>\n      <div className=\"miniLine pageMiniLine\" />\n      <div className=\"portfolioFlatContainer\">\n        {\n          education.map(\n            educationPlace => (\n              <PaperCard\n                company={educationPlace.institution}\n                position={educationPlace.area}\n                grade={educationPlace.gpa}\n                startDate={educationPlace.startdate}\n                endDate={educationPlace.enddate}\n                degree={educationPlace.qualification}\n              >\n                {educationPlace.details}\n              </PaperCard>\n            ),\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n// <FlatCard\n//   institution={educationPlace.institution}\n//   degree={educationPlace.qualification}\n//   area={educationPlace.area}\n//   grade={educationPlace.gpa}\n//   startDate={educationPlace.startdate}\n//   endDate={educationPlace.enddate}\n// >\n\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FlatCard = (props) => {\n  const {\n    institution, degree, area, children, website, startDate, endDate,\n  } = props;\n  return (\n    <div className=\"portfolioFlat\">\n      <div className=\"portfolioCardTitle\">\n        <span className=\"portfolioCardTitleMain\">\n          {institution}\n          {' '}\n           |\n        </span>\n        {' '}\n        <span className=\"portfolioCardTitleSub\">\n          {degree}\n        </span>\n        <div className=\"portfolioFlatSubTitle\">\n          {area}\n        </div>\n      </div>\n      <div className=\"portfolioFlatContent\">\n        <div className=\"portfolioFlatContentSummary\">\n          {children}\n        </div>\n        <div className=\"portfolioFlatSubTitle portfolioCardWebsite\">\n          Website:\n          {' '}\n          <a href={website} target=\"_blank\">{website}</a>\n        </div>\n      </div>\n      <div className=\"portfolioCardDateContainer\">\n        {startDate}\n        {' '}\n         -\n        {' '}\n        {endDate}\n      </div>\n    </div>\n  );\n};\n\nFlatCard.propTypes = {\n  institution: PropTypes.string.isRequired,\n  degree: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  grade: PropTypes.number.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n};\n\nexport default FlatCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatCard from './cards/flat';\n\nconst Work = (props) => {\n  const { work } = props;\n\n  return (\n    <div className=\"portfolioPage workPage\">\n      <div className=\"portfolioPageTitle\">\n        Work\n      </div>\n      <div className=\"portfolioCardContainer portfolioWorkCardContainer\">\n        {\n          work.map(\n            workPlace => (\n              <FlatCard\n                institution={workPlace.company}\n                degree={workPlace.position}\n                website={workPlace.website}\n                startDate={workPlace.startdate}\n                endDate={workPlace.enddate}\n              >\n                {workPlace.summary}\n              </FlatCard>\n            ),\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nWork.propTypes = {\n  work: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default Work;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExpansionCard = (props) => {\n  const {\n    organisation, position, children, website, startDate, endDate, handlePanelChange, expanded, id,\n  } = props;\n\n  return (\n    <ExpansionPanel expanded={expanded === `panel${id}`} onChange={() => handlePanelChange(`panel${id}`)} className=\"portfolioVolunteerExpansionPanel\">\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1bh-content\"\n        id=\"panel1bh-header\"\n      >\n        <div className=\"portfolioExpansionPanelTitle\">{organisation}</div>\n        <Typography className=\"portfolioExpansionPanelSubTitle\">{position}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <div className=\"portfolioExpansionPanelDetails\">\n          <Typography>\n            {children}\n          </Typography>\n          <div className=\"miniLine miniCardLine\" />\n          <div className=\"portfolioExpansionPanelWebsite\">\n            <span>Website |</span>\n            {' '}\n            <a href={website} target=\"_blank\">{website}</a>\n          </div>\n          <div className=\"portfolioCardDateContainer\">\n            {startDate}\n            {' '}\n            |\n            {' '}\n            {endDate}\n          </div>\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nExpansionCard.propTypes = {\n  organisation: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  handlePanelChange: PropTypes.func.isRequired,\n  expanded: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ExpansionCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionCard from './cards/expand';\n\nclass Volunteer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n    this.handlePanelChange = this.handlePanelChange.bind(this);\n  }\n\n  handlePanelChange(panel) {\n    const { expanded } = this.state;\n    if (expanded === panel) {\n      this.setState({\n        expanded: false,\n      });\n    } else {\n      this.setState({\n        expanded: panel,\n      });\n    }\n  }\n\n  render() {\n    const { expanded } = this.state;\n    const { volunteer } = this.props;\n    return (\n      <div className=\"portfolioPage volunteerPage\">\n        <div className=\"portfolioPageSplit rightVolunteer\">\n          Volunteering | POR\n        </div>\n        <div className=\"portfolioPageSplit leftVolunteer\">\n          {\n            volunteer.map(\n              (volunteerPlace, index) => (\n                <ExpansionCard\n                  organisation={volunteerPlace.organisation}\n                  position={volunteerPlace.position}\n                  website={volunteerPlace.website}\n                  startDate={volunteerPlace.startdate}\n                  endDate={volunteerPlace.enddate}\n                  handlePanelChange={this.handlePanelChange}\n                  expanded={expanded}\n                  id={index}\n                >\n                  {volunteerPlace.summary}\n                </ExpansionCard>\n              ),\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nVolunteer.propTypes = {\n  volunteer: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default Volunteer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\n\nconst MiniCard = (props) => {\n  const {\n    title, items, handleDialogOpen,\n  } = props;\n\n  return (\n    <Card className=\"portfolioExtraCard\">\n      <div className=\"portfolioExtraDetails\">\n        <CardContent className=\"portfolioExtraContent\">\n          <Typography component=\"h5\" variant=\"h5\" style={{ textTransform: 'capitalize' }}>\n            { title }\n          </Typography>\n          {\n            items.map(\n              item => <Chip className=\"chip\" variant=\"outlined\" label={item.title} onClick={() => handleDialogOpen(title, item)} />,\n            )\n          }\n        </CardContent>\n      </div>\n      <div className=\"portfolioExtraImage miniAwardImage\" />\n    </Card>\n  );\n};\n\nMiniCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n  handleDialogOpen: PropTypes.func.isRequired,\n};\n\nexport default MiniCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\n\nconst MiniCard = (props) => {\n  const {\n    title, items,\n  } = props;\n\n  return (\n    <Card className=\"portfolioExtraCard\">\n      <div className=\"portfolioExtraDetails\">\n        <CardContent className=\"portfolioExtraContent\">\n          <Typography component=\"h5\" variant=\"h5\" style={{ textTransform: 'capitalize' }}>\n            { title }\n          </Typography>\n          {\n            items.map(\n              item => <Chip className=\"chip\" variant=\"outlined\" label={item.language} />,\n            )\n          }\n        </CardContent>\n      </div>\n      <div className=\"portfolioExtraImage miniLanguageImage\" />\n    </Card>\n  );\n};\n\nMiniCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default MiniCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\n\nconst MiniCard = (props) => {\n  const {\n    title, items, handleDialogOpen,\n  } = props;\n\n  return (\n    <Card className=\"portfolioExtraCard\">\n      <div className=\"portfolioExtraDetails\">\n        <CardContent className=\"portfolioExtraContent\">\n          <Typography component=\"h5\" variant=\"h5\" style={{ textTransform: 'capitalize' }}>\n            { title }\n          </Typography>\n          {\n            items.map(\n              item => <Chip className=\"chip\" variant=\"outlined\" label={item.name} onClick={() => handleDialogOpen(title, item)} />,\n            )\n          }\n        </CardContent>\n      </div>\n      <div className=\"portfolioExtraImage miniPublicationImage\" />\n    </Card>\n  );\n};\n\nMiniCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n  handleDialogOpen: PropTypes.func.isRequired,\n};\n\nexport default MiniCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\n\nconst MiniCard = (props) => {\n  const {\n    title, items,\n  } = props;\n\n  return (\n    <Card className=\"portfolioExtraCard\">\n      <div className=\"portfolioExtraDetails\">\n        <CardContent className=\"portfolioExtraContent\">\n          <Typography component=\"h5\" variant=\"h5\" style={{ textTransform: 'capitalize' }}>\n            { title }\n          </Typography>\n          {\n            items.map(\n              item => <Chip className=\"chip\" variant=\"outlined\" label={item.name} />,\n            )\n          }\n        </CardContent>\n      </div>\n      <div className=\"portfolioExtraImage miniSkillImage\" />\n    </Card>\n  );\n};\n\nMiniCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default MiniCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function AlertDialogSlide(props) {\n  const {\n    open, handleDialogClose, title, children, date, publisher, website,\n  } = props;\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        fullWidth={true}\n        maxWidth=\"sm\"\n        keepMounted\n        onClose={() => handleDialogClose({ title })}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        style={{ padding: '50px' }}\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{ title }</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <div className=\"portfolioPublishCompany\">\n              <span>Published By -</span>\n              {' '}\n              {publisher}\n            </div>\n            <div className=\"portfolioPublishDate\">\n              <span>Released On -</span>\n              {' '}\n              {date}\n            </div>\n            <br />\n            <div className=\"portfolioPublishSummary\">\n              {children}\n            </div>\n            <br />\n            <div className=\"portfolioPublishWebsite\">\n              <span>Website -</span>\n              {' '}\n              <a href={website}>{website}</a>\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleDialogClose({ title })}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAlertDialogSlide.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleDialogClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function AlertDialogSlide(props) {\n  const {\n    open, handleDialogClose, title, children, date, awarder,\n  } = props;\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        fullWidth={true}\n        maxWidth=\"sm\"\n        keepMounted\n        onClose={() => handleDialogClose({ title })}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        style={{ padding: '50px' }}\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{ title }</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\" style={{ overflowWrap: 'normal' }}>\n            <div className=\"portfolioAwardCompany\">\n              <span>Awarded By -</span>\n              {' '}\n              {awarder}\n            </div>\n            <div className=\"portfolioAwardDate\">\n              <span>On -</span>\n              {' '}\n              {date}\n            </div>\n            <br />\n            <div className=\"portfolioAwardSummary\">\n              {children}\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleDialogClose({ title })}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAlertDialogSlide.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleDialogClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  awarder: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport AwardCard from './cards/mini/award.jsx';\nimport LanguageCard from './cards/mini/language.jsx';\nimport PublicationCard from './cards/mini/publication.jsx';\nimport SkillCard from './cards/mini/skills.jsx';\nimport DialogPublication from './cards/dialogPublication';\nimport DialogAward from './cards/dialogAward';\n\nclass Extra extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      awards, publications, languages, skills,\n    } = this.props;\n    this.state = {\n      openPublishDialog: false,\n      openAwardDialog: false,\n      userAwards: awards,\n      userPublication: publications,\n      userLanguages: languages,\n      userSkills: skills,\n      title: '',\n      company: '',\n      date: '',\n      website: '',\n      text: '',\n    };\n    this.handleDialogOpen = this.handleDialogOpen.bind(this);\n    this.handleDialogClose = this.handleDialogClose.bind(this);\n  }\n\n  handleDialogOpen(type, chip) {\n    if (type === 'publications') {\n      this.setState({\n        openPublishDialog: true,\n        title: chip.name,\n        company: chip.publisher,\n        date: chip.releaseDate,\n        website: chip.website,\n        text: chip.summary,\n      });\n    } else if (type === 'awards') {\n      this.setState({\n        openAwardDialog: true,\n        title: chip.title,\n        company: chip.awarder,\n        date: chip.date,\n        text: chip.details,\n      });\n    }\n  }\n\n  handleDialogClose() {\n    this.setState({\n      openAwardDialog: false,\n      openPublishDialog: false,\n    });\n  }\n\n  render() {\n    const {\n      title, openPublishDialog, openAwardDialog, company, date, website, text, userAwards, userLanguages, userSkills, userPublication,\n    } = this.state;\n    let AwardDisp, PublicDisp, SkillDisp;\n    console.log(userAwards);\n    if (userAwards.length > 0 && userAwards[0].title !== '') {\n      AwardDisp = <AwardCard title=\"awards\" items={userAwards} handleDialogOpen={this.handleDialogOpen} />;\n    }\n    if (userPublication.length > 0 && userPublication[0].name !== '') {\n      PublicDisp = <PublicationCard title=\"publications\" items={userPublication} handleDialogOpen={this.handleDialogOpen} />;\n    }\n    if (userSkills.length > 0 && userSkills[0].name !== '') {\n      SkillDisp = <SkillCard title=\"skills\" items={userSkills} />;\n    }\n\n    return (\n      <div className=\"portfolioPage extrasPage\">\n        <div className=\"portfolioPageTitle floodFill\">\n          Extra\n          {\"'\"}\n          s\n        </div>\n        <div className=\"portfolioFlatContainer\">\n          {AwardDisp}\n          {PublicDisp}\n          {SkillDisp}\n          <LanguageCard title=\"languages\" items={userLanguages} handleDialogOpen={this.handleDialogOpen} />\n        </div>\n        <DialogPublication\n          title={title}\n          handleDialogClose={this.handleDialogClose}\n          open={openPublishDialog}\n          publisher={company}\n          date={date}\n          website={website}\n        >\n          { text }\n        </DialogPublication>\n        <DialogAward\n          title={title}\n          handleDialogClose={this.handleDialogClose}\n          open={openAwardDialog}\n          awarder={company}\n          date={date}\n        >\n          { text }\n        </DialogAward>\n        <div className=\"miniLine\" />\n      </div>\n    );\n  }\n}\n\nexport default Extra;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Contact = (props) => {\n  const {\n    email, phone, location,\n  } = props;\n\n  return (\n    <div className=\"portfolioPage contactPage\">\n      <div className=\"portfolioPageTitle\">\n        Contact Me\n      </div>\n      <div className=\"portfolioContactCard\">\n        <div className=\"miniLine\" />\n        <li>\n          <span className=\"portfolioContactCardInfo\">\n            <span className=\"portfolioContactCardInfoTitle\">\n              Email ID -\n            </span>\n            {' '}\n            <span className=\"portfolioContactCardInfoDetails\">\n              {email}\n            </span>\n          </span>\n        </li>\n        <li>\n          <span className=\"portfolioContactCardInfo\">\n            <span className=\"portfolioContactCardInfoTitle\">\n              Contact No -\n            </span>\n            {' '}\n            <span className=\"portfolioContactCardInfoDetails\">\n              {phone}\n            </span>\n          </span>\n        </li>\n        <div className=\"miniLine\" />\n      </div>\n      <div className=\"portfolioContactCard\">\n        <div className=\"miniLine\" />\n        <div className=\"portfolioContactCardAddress\">\n          <span>{location.addressline1}</span>\n          <br />\n          <span>{location.addressline2}</span>\n          <br />\n          {location.city}\n          <br />\n          {location.country}\n          {' '}\n          |\n          {' '}\n          {location.pincode}\n        </div>\n        <div className=\"miniLine\" />\n      </div>\n      {/*<div className=\"portfolioContactCard portfolioContactSocialCard\">\n        <span>insert social icons with clickable links</span>\n      </div>*/}\n    </div>\n  );\n};\n\nContact.propTypes = {\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  location: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport Landing from \"./portfolio/landing\";\nimport About from \"./portfolio/about\";\nimport Education from \"./portfolio/education\";\nimport Work from \"./portfolio/work\";\nimport Volunteer from \"./portfolio/volunteer\";\nimport Extra from \"./portfolio/extra\";\nimport Contact from \"./portfolio/contact\";\n\nimport './portfolio.css';\n\n\n\nfunction App(props) {\n  const scrollFunc = () => scroll.scrollTo(window.innerHeight);\n  const profile = props.appData.profile;\n  return (\n      <div class=\"portfolioContainerFull2\">\n        <Landing\n          name={profile.user.name}\n          label={profile.about.label}\n          img={profile.about.imgUrl}\n          initScroll={scrollFunc}\n        />\n        <div class=\"portfolioBodyCont\" style={{ top: window.innerHeight + 'px' }}>\n          <About summary={profile.about} top={window.innerHeight} />\n          <Education education={profile.education} />\n          <Work work={profile.work} />\n          <Volunteer volunteer={profile.volunteer} />\n          <Extra\n            awards={profile.awards}\n            publications={profile.publications}\n            languages={profile.languages}\n            skills={profile.skills}\n          />\n          <Contact\n            email={profile.user.email}\n            phone={profile.about.number}\n            location={profile.location}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nfetch(`./Data/file.json`)\n.then((r) => r.json())\n.then((data) =>{\n  console.log(data);\n    ReactDOM.render(<App appData={data}/>, document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}